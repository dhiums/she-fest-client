query GetAllProgrammes($api_key: String!) {
  programmes(api_key: $api_key) {
    id
    name
    programCode
    # resultEntered
    type
    mode
    # resultPublished
    candidateCount
    groupCount
    category {
      name
    }
    candidateProgramme{
      id
      candidate{
        chestNO
        name
        team{
          name
          zone{
            name
          }
        }
      }
    }
  }
}

query GetProgrammeByCode($api_key: String!, $programCode: String!) {
  programmeByCode(api_key: $api_key, code: $programCode) {
    candidateProgramme {
      candidate {
        name
        chestNO
        team {
          name
        }
      }
      finalgrade {
        id
        name
      }
      finalposition {
        id
        name
      }
      zonalgrade {
        id
        name
      }
      zonalposition {
        id
        name
      }
      candidatesOfGroup {
        name
        chestNO
      }
      zonalpoint
      finalpoint
    }
    resultEntered
    resultPublished
    programCode
    name
    type
    groupCount
    resultEntered
    candidateCount
    resultPublished
    anyIssue
    mode
    type
    category {
      name
    }
    duration
    date
    venue
  }
}

query GetDetailedProgramme($id: Int!, $api_key: String!) {
  programme(id: $id, api_key: $api_key) {
    candidateProgramme {
      id
      candidate {
        name
        chestNO
        team {
          name
          id
        }
      }
      candidatesOfGroup {
        name
        chestNO
      }
    }
    resultEntered
    resultPublished
    programCode
    candidateCount
    name
    type
    groupCount
    resultEntered
    resultPublished
    anyIssue
    category {
      name
    }
    duration
    date
    venue
  }
}

query totalProgramsCount($api_key: String!) {
  programmes(api_key: $api_key) {
    id
  }
}

query GetPublishedProgrammes($api_key: String!) {
  resultPublishedProgrammes(api_key: $api_key) {
    id
    name
    mode
    type
    programCode
    resultEntered
    resultPublished
    candidateCount
    category {
      name
    }
    anyIssue
    candidateProgramme {
      id
      zonalpoint
      finalpoint
      finalgrade {
        name
        pointGroup
        pointSingle
        pointHouse
      }
      finalposition {
        name
        value
        pointGroup
        pointSingle
        pointHouse
      }
      zonalgrade {
        name
        pointGroup
        pointSingle
        pointHouse
      }
      zonalposition {
        name
        value
        pointGroup
        pointSingle
        pointHouse
      }
      candidate {
        name
        chestNO
        team {
          name
          id
        }
      }
    }
  }
}

query GetEnteredProgrammes($api_key: String!) {
  resultEnteredProgrammes(api_key: $api_key) {
    id
    name
    mode
    type
    programCode
    resultEntered
    resultPublished
    candidateCount
    category {
      name
    }
    anyIssue
    candidateProgramme {
      id
      zonalpoint
      finalpoint
      finalgrade {
        name
        pointGroup
        pointSingle
        pointHouse
      }
      finalposition {
        name
        value
        pointGroup
        pointSingle
        pointHouse
      }
      zonalgrade {
        name
        pointGroup
        pointSingle
        pointHouse
      }
      zonalposition {
        name
        value
        pointGroup
        pointSingle
        pointHouse
      }
      candidate {
        name
        chestNO
        team {
          name
          id
        }
      }
    }
  }
}

query GetAllDetailedProgrammeForJudge($api_key: String!) {
  programmes(api_key: $api_key) {
    id
    candidateProgramme {
      candidate {
        name
        chestNO
        team {
          name
        }
      }
      candidatesOfGroup {
        name
        chestNO
      }
      mark
      finalgrade {
        name
        pointGroup
        pointSingle
        pointHouse
      }
      finalposition {
        name
        value
        pointGroup
        pointSingle
        pointHouse
      }
      zonalgrade {
        name
        pointGroup
        pointSingle
        pointHouse
      }
      zonalposition {
        name
        value
        pointGroup
        pointSingle
        pointHouse
      }
    }
    resultEntered
    resultPublished
    programCode
    name
    groupCount
    candidateCount
    resultEntered
    resultPublished
    anyIssue
    type
    category {
      name
    }
  }
}

query GetAllDetailedProgramme($api_key: String!) {
  programmes(api_key: $api_key) {
    id
    candidateProgramme {
      candidate {
        id
      }
      candidatesOfGroup {
        id
      }
    }
    resultEntered
    resultPublished
    programCode
    name
    type
    groupCount
    candidateCount
    resultEntered
    resultPublished
    anyIssue
    category {
      name
    }
    duration
    date
    venue
  }
}

query GetAllProgrammesByCandidates($api_key: String!) {
  programmes(api_key: $api_key) {
    id
    name
    programCode
    resultEntered
    resultPublished
    candidateCount
    groupCount
    category {
      name
    }
    candidateProgramme {
      id
    }
  }
}

query GetOneProgramme($id: Int!, $api_key: String!) {
  programme(id: $id, api_key: $api_key) {
    id
    name
    resultEntered
    resultPublished
    programCode
    duration
    anyIssue
    candidateCount
    groupCount
    venue
    date
    category {
      name
    }
    type
    mode
    conceptNote
  }
}

mutation AddProgramme(
  $name: String!
  $candidateCount: Int!
  $category: String!
  $duration: Int!
  $groupCount: Int
  $programCode: String!
  $type: Type!
  $mode: Mode!
  $conceptNote: String!
) {
  createProgramme(
    createProgrammeInput: {
      name: $name
      candidateCount: $candidateCount
      category: $category
      duration: $duration
      groupCount: $groupCount
      programCode: $programCode
      type: $type
      mode: $mode
      conceptNote: $conceptNote
    }
  ) {
    id
    name
    candidateCount
    category {
      name
    }
    duration
    groupCount
    programCode
    type
    mode
    conceptNote
    resultEntered
    resultPublished
  }
}

mutation AddManyProgrammes($inputs: [CreateProgrammeInput!]!) {
  createManyProgrammes(createProgrammeInput: { inputs: $inputs }) {
    id
    name
    resultEntered
    resultPublished
    programCode
  }
}

query programsCount($api_key: String!) {
  programmes(api_key: $api_key) {
    id
  }
}

mutation EditProgramme(
  $id: Int!
  $name: String!
  $candidateCount: Int!
  $category: String!
  $duration: Int!
  $groupCount: Int
  $programCode: String!
  $type: Type!
  $mode: Mode!
  $conceptNote: String!
) {
  updateProgramme(
    updateProgrammeInput: {
      id: $id
      name: $name
      candidateCount: $candidateCount
      category: $category
      duration: $duration
      groupCount: $groupCount
      programCode: $programCode
      type: $type
      mode: $mode
      conceptNote: $conceptNote
    }
  ) {
    id
    name
    resultEntered
    resultPublished
    programCode
  }
}

mutation DeleteProgramme($id: Int!) {
  removeProgramme(id: $id) {
    __typename
  }
}

mutation UploadManySchedule($inputs: [CreateSchedule!]!) {
  setManySchedule(createScheduleInput: { inputs: $inputs }) {
    programCode
    date
    venue
  }
}

mutation UploadSchedule($programCode: String!, $date: DateTime!, $venue: Int) {
  setSchedule(
    createScheduleInput: { code: $programCode, date: $date, venue: $venue }
  ) {
    programCode
    date
    venue
  }
}
